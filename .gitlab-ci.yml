stages:
  - build
  - deploy

variables:
  GIT_DEPTH: 0 # required for Nerdbank.Gitversioning support
  CP_VERSION: "11.3"

content-portal:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  variables:
    sourceDirectory: "../Build"
  script:
    - cd Picturepark.ContentPortal.Demo/Picturepark.ContentPortal.Demo/ClientApp
    - node create-npmrc.js $gitpat
    - cd ../../../cake
    - powershell ./build.ps1 --target="PublishContentPortal"
  artifacts:
    paths:
      - Build/**

content-portal-v2:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/docker-images/docker:19.03.12
  services:
    - name: gitlab-registry.vit.ch/picturepark/docker-images/docker:19.03.12-dind
      alias: docker
  tags:
    - build-docker-image
  script:
    - cd Picturepark.ContentPortal.Demo-v2-Beta
    - export DOCKER_CONFIG=$(mktemp -d)
    - export CONTAINER_IMAGE=gitlab-registry.vit.ch/picturepark/picturepark.sdk.samples/content-portal-v2/$CP_VERSION:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_IMAGE . -f Picturepark.ContentPortal.Demo/Dockerfile --build-arg PICTUREPARK_SCOPE_NPM_AUTH_TOKEN=$PICTUREPARK_SCOPE_NPM_AUTH_TOKEN
    - hash=$(docker push $CONTAINER_IMAGE | grep -o "sha256\:[0-9a-z]\{64\}")
    - echo "CONTAINER_SHA=$hash" > ../images.dotenv
  artifacts:
    reports:
      dotenv: images.dotenv


press-portal:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  variables:
    sourceDirectory: "../Build"
  script:
    - cd cake
    - powershell ./build.ps1 --target="PublishPressPortal"
  artifacts:
    paths:
      - Build/**
      - cake/**

.press-portal:deploy:
  stage: deploy
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  needs: [ "press-portal:build" ]
  variables:
    sourceDirectory: "../Build"
    serviceName: "Picturepark $PLATFORM DemoPressPortal"
    server: "$DEPLOY_TARGET"
    serverDirectory: "\\\\$DEPLOY_TARGET\\Integrations\\$PLATFORM\\Microsites\\DemoPressPortal\\"
  script:
    - net use \\$DEPLOY_TARGET /user:$SERVICE_MANAGER_USER $SERVICE_MANAGER_PASSWORD
    - cd cake
    - powershell ./build.ps1 --target="DeployPressPortal"
    
.content-portal:deploy:
  stage: deploy
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  needs: [ "content-portal:build" ]
  variables:
    sourceDirectory: "../Build"
    serviceName: "Picturepark $PLATFORM DemoContentPortal"
    server: "$DEPLOY_TARGET"
    serverDirectory: "\\\\$DEPLOY_TARGET\\Integrations\\$PLATFORM\\Microsites\\DemoContentPortal\\"
  script:
    - net use \\$DEPLOY_TARGET /user:$SERVICE_MANAGER_USER $SERVICE_MANAGER_PASSWORD
    - cd cake
    - powershell ./build.ps1 --target="DeployContentPortal"

press-portal:deploy:QA01:
  extends: .press-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA01
  environment:
    name: CPQA01 - Press Portal
    
press-portal:deploy:QA04:
  extends: .press-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA04
  environment:
    name: CPQA04 - Press Portal
  
content-portal:deploy:QA01:
  extends: .content-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA01
  environment:
    name: CPQA01 - Content Portal
  
content-portal:deploy:QA04:
  extends: .content-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA04
  environment:
    name: CPQA04 - Content Portal
