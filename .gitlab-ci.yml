stages:
  - fetch
  - build
  - publish
  - deploy

variables:
  GIT_DEPTH: 0 # required for Nerdbank.Gitversioning support
  CP_VERSION: "11.6"

include:
  - project: 'deploy/azure/registry'
    file: '.gitlab-ci.template.yml'

fetch-azure-registry-info:
  stage: fetch
  extends: .fetch-acr-login-data
  image: $ACR_FETCH_IMAGE
  tags:
    - build-docker-linux

press-portal:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/docker-images/docker:19.03.12
  services:
    - name: gitlab-registry.vit.ch/picturepark/docker-images/docker:19.03.12-dind
      alias: docker
  tags:
    - build-docker-image
  script:
    - export DOCKER_CONFIG=$(mktemp -d)
    - export CONTAINER_IMAGE=picturepark/picturepark.sdk.samples/press-portal/$CP_VERSION:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    - docker build --pull -t $CONTAINER_IMAGE . -f Picturepark.PressPortal.Demo/Picturepark.PressPortal.Demo/Dockerfile
    - docker login -u $HARBOR_USER -p $HARBOR_PASSWORD $HARBOR_URL
    - docker tag $CONTAINER_IMAGE $HARBOR_URL/$CONTAINER_IMAGE
    - docker push $HARBOR_URL/$CONTAINER_IMAGE
    - !reference [.push-image-to-azure, script]

press-portal:publish-helm-chart:
  stage: publish
  image:
    name: gitlab-registry.vit.ch/picturepark/ci-containers/helm-helper/$CP_VERSION
  tags:
    - build-docker-linux
  script:
    - cd Picturepark.PressPortal.Demo/helm
    - helm-set.sh
      --set image.service="picturepark/picturepark.sdk.samples/press-portal/$CP_VERSION:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
      ./sample-press-portal
    - helm package
      --app-version "$CP_VERSION-$CI_COMMIT_REF_SLUG"
      --version "$CP_VERSION.0+$CI_COMMIT_REF_SLUG"
      ./sample-press-portal
    - mv *.tgz ../..
  artifacts:
    paths:
      - ./*.tgz
