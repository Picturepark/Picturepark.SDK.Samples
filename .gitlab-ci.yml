stages:
  - build
  - publish
  - deploy

variables:
  GIT_DEPTH: 0 # required for Nerdbank.Gitversioning support
  CP_VERSION: "11.6"

include:
  - project: 'deploy/azure/registry'
    file: '.gitlab-ci.template.yml'

content-portal:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  variables:
    sourceDirectory: "../Build"
  script:
    - cd Picturepark.ContentPortal.Demo/Picturepark.ContentPortal.Demo/ClientApp
    - node create-npmrc.js $gitpat
    - cd ../../../cake
    - powershell ./build.ps1 --target="PublishContentPortal"
  artifacts:
    paths:
      - Build/**

content-portal-v2:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/docker-images/docker:19.03.12
  services:
    - name: gitlab-registry.vit.ch/picturepark/docker-images/docker:19.03.12-dind
      alias: docker
  tags:
    - build-docker-image
  script:
    - export DOCKER_CONFIG=$(mktemp -d)
    - export CONTAINER_IMAGE=picturepark/picturepark.sdk.samples/content-portal-v2/$CP_VERSION:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    - docker login -u $HARBOR_USER -p $HARBOR_PASSWORD $HARBOR_URL
    - docker tag $CONTAINER_IMAGE $HARBOR_URL/$CONTAINER_IMAGE
    - docker push $HARBOR_URL/$CONTAINER_IMAGE
    - !reference [.push-image-to-azure, script]

press-portal:build:
  stage: build
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  variables:
    sourceDirectory: "../Build"
  script:
    - cd cake
    - powershell ./build.ps1 --target="PublishPressPortal"
  artifacts:
    paths:
      - Build/**
      - cake/**

.press-portal:deploy:
  stage: deploy
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  needs: [ "press-portal:build" ]
  variables:
    sourceDirectory: "../Build"
    serviceName: "Picturepark $PLATFORM DemoPressPortal"
    server: "$DEPLOY_TARGET"
    serverDirectory: "\\\\$DEPLOY_TARGET\\Integrations\\$PLATFORM\\Microsites\\DemoPressPortal\\"
  script:
    - net use \\$DEPLOY_TARGET /user:$SERVICE_MANAGER_USER $SERVICE_MANAGER_PASSWORD
    - cd cake
    - powershell ./build.ps1 --target="DeployPressPortal"
    
.content-portal:deploy:
  stage: deploy
  image: gitlab-registry.vit.ch/picturepark/ci-containers/win-netcore-node-container
  tags:
    - build-docker-windows
  needs: [ "content-portal:build" ]
  variables:
    sourceDirectory: "../Build"
    serviceName: "Picturepark $PLATFORM DemoContentPortal"
    server: "$DEPLOY_TARGET"
    serverDirectory: "\\\\$DEPLOY_TARGET\\Integrations\\$PLATFORM\\Microsites\\DemoContentPortal\\"
  script:
    - net use \\$DEPLOY_TARGET /user:$SERVICE_MANAGER_USER $SERVICE_MANAGER_PASSWORD
    - cd cake
    - powershell ./build.ps1 --target="DeployContentPortal"

press-portal:deploy:QA01:
  extends: .press-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA01
  environment:
    name: CPQA01 - Press Portal
    
press-portal:deploy:QA04:
  extends: .press-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA04
  environment:
    name: CPQA04 - Press Portal
  
content-portal:deploy:QA01:
  extends: .content-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA01
  environment:
    name: CPQA01 - Content Portal
  
content-portal:deploy:QA04:
  extends: .content-portal:deploy
  when: manual
  variables:
    PLATFORM: CPQA04
  environment:
    name: CPQA04 - Content Portal

content-portal-v2:publish-helm-chart:
  stage: publish
  image:
    name: gitlab-registry.vit.ch/picturepark/ci-containers/helm-helper/$CP_VERSION
  tags:
    - build-docker-linux
  script:
    - cd Picturepark.ContentPortal.Demo-v2-Beta/helm
    - helm-set.sh
      --set image.service="picturepark/picturepark.sdk.samples/content-portal-v2/$CP_VERSION:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
      ./sample-content-portal
    - helm package
      --app-version "$CP_VERSION-$CI_COMMIT_REF_SLUG"
      --version "$CP_VERSION.0+$CI_COMMIT_REF_SLUG"
      ./sample-content-portal
    - mv *.tgz ../..
  artifacts:
    paths:
      - ./*.tgz
